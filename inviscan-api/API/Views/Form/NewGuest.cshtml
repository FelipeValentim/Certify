@using API.Models;
@model EventViewModel;

<html>
<head>
    <style>
        @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
        }

        .formbold-main-wrapper {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 48px;
        }

        .title {
            font-size: 1rem;
        }

        .formbold-form-wrapper {
            margin: 0 auto;
            max-width: 95%;
            width: 100%;
            background: white;
        }

        .formbold-img {
            display: block;
            border-radius: 50%;
            margin: auto;
            height: 200px;
            width: 200px;
            object-fit: cover;
        }

        .formbold-img-container {
            padding: 1rem;
        }

        .formbold-form-input {
            width: 100%;
            padding: 13px 22px;
            border-radius: 5px;
            border: 1px solid #dde3ec;
            background: #ffffff;
            font-weight: 500;
            font-size: 16px;
            color: #536387;
            outline: none;
            resize: none;
        }

            .formbold-form-input:focus {
                border-color: #6a64f1;
                box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
            }

        .formbold-form-label {
            color: #07074d;
            font-weight: 500;
            font-size: 14px;
            line-height: 24px;
            display: block;
            margin-bottom: 20px;
        }

            .formbold-form-label span {
                color: #536387;
                font-size: 12px;
                line-height: 18px;
                display: inline-block;
            }

        .formbold-mb-3 {
            margin-bottom: 15px;
        }

        .formbold-mb-6 {
            margin-bottom: 30px;
        }

        .formbold-radio-flex {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .formbold-radio-label {
            font-size: 14px;
            line-height: 24px;
            color: #07074d;
            position: relative;
            padding-left: 25px;
            cursor: pointer;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .formbold-input-radio {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

        .formbold-radio-checkmark {
            position: absolute;
            top: -1px;
            left: 0;
            height: 18px;
            width: 18px;
            background-color: #ffffff;
            border: 1px solid #dde3ec;
            border-radius: 50%;
        }

        .formbold-radio-label
        .formbold-input-radio:checked ~ .formbold-radio-checkmark {
            background-color: #6a64f1;
        }

        .formbold-radio-checkmark:after {
            content: '';
            position: absolute;
            display: none;
        }

        .formbold-radio-label
        .formbold-input-radio:checked ~ .formbold-radio-checkmark:after {
            display: block;
        }

        .formbold-radio-label .formbold-radio-checkmark:after {
            top: 50%;
            left: 50%;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: #ffffff;
            transform: translate(-50%, -50%);
        }

        .formbold-btn {
            text-align: center;
            width: 100%;
            font-size: 16px;
            border-radius: 5px;
            padding: 14px 25px;
            border: none;
            font-weight: 500;
            background-color: #6a64f1;
            color: white;
            cursor: pointer;
            margin-top: 25px;
        }

            .formbold-btn:hover {
                box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
            }
    </style>
</head>

<body>
    <!-- Learn More: https://formbold.com -->
    <div class="formbold-form-wrapper">
        <div class="formbold-img-container">
            <img src="@Model.Photo" class="formbold-img">
        </div>

        <form id="guestForm">
            <div class="formbold-mb-6">
                <label for="qusOne" class="formbold-form-label title">
                    Você foi convidado pelo @Model.User.Name para o evento @Model.Name
                </label>
                <input type="hidden" name="event" value="@Model.Id" />

                <div class="formbold-mb-3">
                    <label for="name" class="formbold-form-label">Nome</label>

                    <input type="text"
                           name="name"
                           id="name"
                           class="formbold-form-input" />
                </div>

                <div>
                    <label for="email" class="formbold-form-label">Email</label>
                    <input type="email"
                           name="email"
                           id="email"
                           class="formbold-form-input" />
                </div>

                <button type="submit" class="formbold-btn">Salvar</button>

            </div>
        </form>
        <div id="response"></div>

    </div>
    <!-- This is not part of Pen -->

    <script>
        const form = document.getElementById('guestForm');
        const responseDiv = document.getElementById('response');

        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(form);
            const model = {
                name: formData.get('name'),
                event: formData.get('event'),
            };

            try {
                const response = await fetch('/Guest/NewGuest', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(model)
                });

                if (response.ok) {
                    responseDiv.textContent = `Convidado cadastrado com sucesso: ${JSON.stringify(result)}`;
                } else {
                    const errorMessage = await response.text();

                    responseDiv.textContent = `${errorMessage}`;
                }
            } catch (error) {
                responseDiv.textContent = `Erro ao enviar a requisição: ${error.message}`;
            }
        });
    </script>
</body>
</html>
